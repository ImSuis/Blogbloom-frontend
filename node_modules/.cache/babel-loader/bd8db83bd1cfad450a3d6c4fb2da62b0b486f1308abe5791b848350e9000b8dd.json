{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/SingleBlogPost.jsx\",\n  _s = $RefreshSig$();\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { toast } from \"react-toastify\";\nimport { deleteBlogApi, deleteCommentApi, editBlogApi, getCommentsApi, getSingleBlogApi, postCommentApi } from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleBlogPost = ({\n  blogId,\n  loggedInUserId\n}) => {\n  _s();\n  const [blog, setBlog] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [replyingTo, setReplyingTo] = useState(null); // State to track which comment is being replied to\n  const [commenting, setCommenting] = useState(false); // State to track whether the comment text field should be displayed\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const blogResponse = await getSingleBlogApi(blogId);\n        console.log('Blog Data:', blogResponse.data); // Log the blog data\n        setBlog(blogResponse.data.blog);\n        const commentsResponse = await getCommentsApi(blogId); // Fetch comments using the getCommentsApi function\n        console.log('Comments Data:', commentsResponse.data); // Log the comments data\n        setComments(commentsResponse.data.comments);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [blogId]);\n  if (!blog) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Function to organize comments into a tree-like structure\n  const organizeComments = comments => {\n    const commentMap = new Map();\n    const rootComments = [];\n\n    // Map each comment to its ID\n    comments.forEach(comment => {\n      commentMap.set(comment._id, comment);\n    });\n\n    // Iterate over comments to build the tree\n    comments.forEach(comment => {\n      if (comment.parentComment) {\n        const parentComment = commentMap.get(comment.parentComment);\n        if (parentComment) {\n          if (!parentComment.replies) {\n            parentComment.replies = [];\n          }\n          parentComment.replies.push(comment);\n        }\n      } else {\n        rootComments.push(comment);\n      }\n    });\n    return rootComments;\n  };\n\n  // Organize comments into a tree-like structure\n  const threadedComments = organizeComments(comments);\n\n  // Function to handle click on the comment icon\n  const handleCommentIconClick = () => {\n    setCommenting(!commenting); // Toggle the commenting state\n  };\n\n  // Function to post a comment\n  const handleCommentSubmit = async () => {\n    // Get the content of the comment from the input field\n    const commentContent = document.getElementById('commentInput').value;\n    try {\n      // Post the comment to the backend\n      await postCommentApi(blogId, {\n        content: commentContent\n      });\n      // Refresh comments after posting\n      const commentsResponse = await getCommentsApi(blogId);\n      setComments(commentsResponse.data.comments);\n      // Clear the input field and hide the comment text field\n      document.getElementById('commentInput').value = '';\n      setCommenting(false);\n      toast.success(\"Comment posted successfully.\");\n    } catch (error) {\n      console.error('Error posting comment:', error);\n    }\n  };\n\n  // Function to handle submitting a reply\n  const handleReplySubmit = async (parentCommentId, replyContent) => {\n    try {\n      await postCommentApi(blogId, {\n        content: replyContent,\n        parentComment: parentCommentId\n      });\n      // Refresh comments after posting\n      const commentsResponse = await getCommentsApi(blogId);\n      setComments(commentsResponse.data.comments);\n\n      // Clear replyingTo state\n      setReplyingTo(null);\n      toast.success(\"Reply posted successfully.\");\n    } catch (error) {\n      toast.error(\"Error posting reply.\");\n      console.error('Error posting reply:', error);\n    }\n  };\n\n  // Function to handle deleting a comment\n  const handleDeleteComment = async commentId => {\n    try {\n      await deleteCommentApi(commentId);\n      // Refresh comments after deleting\n      const commentsResponse = await getCommentsApi(blogId);\n      setComments(commentsResponse.data.comments);\n\n      // Show success toast message or perform any other necessary actions\n      toast.success(\"Comment deleted successfully.\");\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n      // Show error toast message or perform any other necessary actions\n      toast.error(\"You are not authorized to delete this comment.\");\n    }\n  };\n  const handleDeleteBlog = async () => {\n    try {\n      await deleteBlogApi(blogId); // Call deleteBlogApi function with the blogId\n      toast.success(\"Blog deleted successfully.\");\n      window.location.href = '/'; // Redirect to home page after successful deletion\n    } catch (error) {\n      console.error('Error deleting blog:', error);\n      toast.error(\"You are not authorized to delete this blog.\");\n    }\n  };\n\n  // Function to handle editing a blog\n  const handleEditBlog = async blogId => {\n    try {\n      // Call the editBlogApi function to edit the blog\n      await editBlogApi(blogId);\n      // Redirect to the edit blog page with the blog ID as a URL parameter\n      navigate(`/edit/${blogId}`);\n    } catch (error) {\n      console.error('Error editing blog:', error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  // Function to render threaded comments recursively\n  const renderComments = (comments, renderedIds = new Set()) => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled\",\n      children: comments.map(comment => {\n        if (renderedIds.has(comment._id)) {\n          return null; // Skip rendering if the comment is already rendered\n        }\n\n        renderedIds.add(comment._id); // Add comment ID to rendered set\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-meta\",\n              style: {\n                marginBottom: '0.5em'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small text-muted\",\n                style: {\n                  fontSize: '0.9em',\n                  margin: '0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Author:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-grey\",\n                  style: {\n                    fontSize: '0.8em'\n                  },\n                  children: `${comment.user.firstName || 'Unknown'} ${comment.user.lastName || 'Unknown'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small text-muted\",\n                style: {\n                  fontSize: '0.9em',\n                  margin: '0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-grey\",\n                  style: {\n                    fontSize: '0.8em'\n                  },\n                  children: moment(comment.createdAt).format('MMMM Do YYYY, h:mm a')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-icons\",\n              style: {\n                marginTop: '-1em'\n              },\n              children: [(comment.user.id === loggedInUserId || loggedInUserId === 'admin') &&\n              /*#__PURE__*/\n              // Check if the logged-in user is the author of the comment or is an admin\n              _jsxDEV(\"i\", {\n                className: \"bi bi-trash-fill\",\n                onClick: () => handleDeleteComment(comment._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this) // Delete icon with onClick event\n              , /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-reply-fill\",\n                onClick: () => setReplyingTo(comment._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), replyingTo === comment._id &&\n            /*#__PURE__*/\n            // Conditional rendering for reply text field\n            _jsxDEV(\"div\", {\n              className: \"reply-text-field\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"replyInput\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  placeholder: \"Write a reply...\",\n                  style: {\n                    width: 'calc(100% - 42px)',\n                    marginBottom: '0.5em'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-dark me-2\",\n                  type: \"button\",\n                  style: {\n                    backgroundColor: 'white',\n                    color: 'black',\n                    borderRadius: '35px',\n                    marginBottom: '0.5em'\n                  },\n                  onClick: () => setReplyingTo(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-dark me-2\",\n                  type: \"button\",\n                  style: {\n                    backgroundColor: 'black',\n                    color: 'white',\n                    borderRadius: '35px',\n                    marginBottom: '0.5em'\n                  },\n                  onClick: () => handleReplySubmit(comment._id, document.getElementById('replyInput').value),\n                  children: \"Reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), comment.replies && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: renderComments(comment.replies, renderedIds)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 49\n          }, this), \" \"]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 offset-md-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), loggedInUserId === blog.user.id &&\n          /*#__PURE__*/\n          // Check if the logged-in user is the author of the blog\n          _jsxDEV(\"div\", {\n            className: \"action-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-pencil-fill me-3\",\n              onClick: () => handleEditBlog(blog._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-trash-fill\",\n              onClick: () => handleDeleteBlog(blog._id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small text-muted mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-grey\",\n            children: `${blog.user.firstName || 'Unknown'} ${blog.user.lastName || 'Unknown'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small text-muted mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-grey\",\n            children: moment(blog.createdAt).format('MMMM Do YYYY, h:mm a')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: blog.blogImageUrl || 'https://via.placeholder.com/600x400',\n          alt: blog.title,\n          className: \"img-fluid mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-icon\",\n          style: {\n            textAlign: 'left',\n            marginTop: '1em'\n          },\n          onClick: handleCommentIconClick,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-chat-square-dots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), commenting &&\n        /*#__PURE__*/\n        // Conditional rendering for the comment text field\n        _jsxDEV(\"div\", {\n          className: \"comment-text-field\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"commentInput\",\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Write a comment...\",\n              style: {\n                width: 'calc(100% - 42px)',\n                marginBottom: '0.5em'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-dark me-2\",\n              type: \"button\",\n              style: {\n                backgroundColor: 'white',\n                color: 'black',\n                borderRadius: '35px',\n                marginBottom: '0.5em'\n              },\n              onClick: () => setCommenting(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-dark me-2\",\n              type: \"button\",\n              style: {\n                backgroundColor: 'black',\n                color: 'white',\n                borderRadius: '35px',\n                marginBottom: '0.5em'\n              },\n              onClick: handleCommentSubmit,\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-10 offset-md-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mt-5\",\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), renderComments(threadedComments)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n};\n_s(SingleBlogPost, \"25wYlOIB0yReXiVz56Jbuh7+U/Y=\");\n_c = SingleBlogPost;\nexport default SingleBlogPost;\nvar _c;\n$RefreshReg$(_c, \"SingleBlogPost\");","map":{"version":3,"names":["moment","React","useEffect","useState","toast","deleteBlogApi","deleteCommentApi","editBlogApi","getCommentsApi","getSingleBlogApi","postCommentApi","jsxDEV","_jsxDEV","SingleBlogPost","blogId","loggedInUserId","_s","blog","setBlog","comments","setComments","replyingTo","setReplyingTo","commenting","setCommenting","fetchData","blogResponse","console","log","data","commentsResponse","error","children","fileName","_jsxFileName","lineNumber","columnNumber","organizeComments","commentMap","Map","rootComments","forEach","comment","set","_id","parentComment","get","replies","push","threadedComments","handleCommentIconClick","handleCommentSubmit","commentContent","document","getElementById","value","content","success","handleReplySubmit","parentCommentId","replyContent","handleDeleteComment","commentId","handleDeleteBlog","window","location","href","handleEditBlog","navigate","renderComments","renderedIds","Set","className","map","has","add","style","marginBottom","fontSize","margin","user","firstName","lastName","createdAt","format","marginTop","id","onClick","type","placeholder","width","backgroundColor","color","borderRadius","title","src","blogImageUrl","alt","whiteSpace","textAlign","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/SingleBlogPost.jsx"],"sourcesContent":["import moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { toast } from \"react-toastify\";\nimport { deleteBlogApi, deleteCommentApi, editBlogApi, getCommentsApi, getSingleBlogApi, postCommentApi } from '../api/Api';\n\nconst SingleBlogPost = ({ blogId, loggedInUserId }) => {\n    const [blog, setBlog] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [replyingTo, setReplyingTo] = useState(null); // State to track which comment is being replied to\n    const [commenting, setCommenting] = useState(false); // State to track whether the comment text field should be displayed\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const blogResponse = await getSingleBlogApi(blogId);\n                console.log('Blog Data:', blogResponse.data); // Log the blog data\n                setBlog(blogResponse.data.blog);\n\n                const commentsResponse = await getCommentsApi(blogId); // Fetch comments using the getCommentsApi function\n                console.log('Comments Data:', commentsResponse.data); // Log the comments data\n                setComments(commentsResponse.data.comments);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, [blogId]);\n\n    if (!blog) {\n        return <div>Loading...</div>;\n    }\n\n    // Function to organize comments into a tree-like structure\n    const organizeComments = (comments) => {\n        const commentMap = new Map();\n        const rootComments = [];\n\n        // Map each comment to its ID\n        comments.forEach(comment => {\n            commentMap.set(comment._id, comment);\n        });\n\n        // Iterate over comments to build the tree\n        comments.forEach(comment => {\n            if (comment.parentComment) {\n                const parentComment = commentMap.get(comment.parentComment);\n                if (parentComment) {\n                    if (!parentComment.replies) {\n                        parentComment.replies = [];\n                    }\n                    parentComment.replies.push(comment);\n                }\n            } else {\n                rootComments.push(comment);\n            }\n        });\n\n        return rootComments;\n    };\n\n    // Organize comments into a tree-like structure\n    const threadedComments = organizeComments(comments);\n\n    // Function to handle click on the comment icon\n    const handleCommentIconClick = () => {\n        setCommenting(!commenting); // Toggle the commenting state\n    };\n\n    // Function to post a comment\n    const handleCommentSubmit = async () => {\n        // Get the content of the comment from the input field\n        const commentContent = document.getElementById('commentInput').value;\n\n        try {\n            // Post the comment to the backend\n            await postCommentApi(blogId, { content: commentContent });\n            // Refresh comments after posting\n            const commentsResponse = await getCommentsApi(blogId);\n            setComments(commentsResponse.data.comments);\n            // Clear the input field and hide the comment text field\n            document.getElementById('commentInput').value = '';\n            setCommenting(false);\n            toast.success(\"Comment posted successfully.\");\n        } catch (error) {\n            console.error('Error posting comment:', error);\n        }\n    };\n\n    // Function to handle submitting a reply\n    const handleReplySubmit = async (parentCommentId, replyContent) => {\n        try {\n            await postCommentApi(blogId, { content: replyContent, parentComment: parentCommentId });\n            // Refresh comments after posting\n            const commentsResponse = await getCommentsApi(blogId);\n            setComments(commentsResponse.data.comments);\n\n            // Clear replyingTo state\n            setReplyingTo(null);\n            toast.success(\"Reply posted successfully.\");\n        } catch (error) {\n            toast.error(\"Error posting reply.\");\n            console.error('Error posting reply:', error);\n        }\n    };\n\n    // Function to handle deleting a comment\n    const handleDeleteComment = async (commentId) => {\n        try {\n            await deleteCommentApi(commentId);\n            // Refresh comments after deleting\n            const commentsResponse = await getCommentsApi(blogId);\n            setComments(commentsResponse.data.comments);\n\n            // Show success toast message or perform any other necessary actions\n            toast.success(\"Comment deleted successfully.\");\n        } catch (error) {\n            console.error('Error deleting comment:', error);\n            // Show error toast message or perform any other necessary actions\n            toast.error(\"You are not authorized to delete this comment.\");\n        }\n    };\n\n    const handleDeleteBlog = async () => {\n        try {\n            await deleteBlogApi(blogId); // Call deleteBlogApi function with the blogId\n            toast.success(\"Blog deleted successfully.\");\n            window.location.href = '/'; // Redirect to home page after successful deletion\n        } catch (error) {\n            console.error('Error deleting blog:', error);\n            toast.error(\"You are not authorized to delete this blog.\");\n        }\n    };\n\n\n    // Function to handle editing a blog\n    const handleEditBlog = async (blogId) => {\n        try {\n            // Call the editBlogApi function to edit the blog\n            await editBlogApi(blogId);\n            // Redirect to the edit blog page with the blog ID as a URL parameter\n            navigate(`/edit/${blogId}`);\n        } catch (error) {\n            console.error('Error editing blog:', error);\n            // Handle error (e.g., show an error message to the user)\n        }\n    };\n\n    // Function to render threaded comments recursively\n    const renderComments = (comments, renderedIds = new Set()) => {\n        return (\n            <ul className=\"list-unstyled\">\n                {comments.map(comment => {\n                    if (renderedIds.has(comment._id)) {\n                        return null; // Skip rendering if the comment is already rendered\n                    }\n                    renderedIds.add(comment._id); // Add comment ID to rendered set\n                    return (\n                        <li key={comment._id}>\n                            <div>\n                                <div className=\"comment-meta\" style={{ marginBottom: '0.5em' }}>\n                                    <p className=\"small text-muted\" style={{ fontSize: '0.9em', margin: '0' }}>\n                                        <small>Author:</small>{' '}\n                                        <span className=\"text-grey\" style={{ fontSize: '0.8em' }}>{`${comment.user.firstName || 'Unknown'} ${comment.user.lastName || 'Unknown'}`}</span>\n                                    </p>\n                                    <p className=\"small text-muted\" style={{ fontSize: '0.9em', margin: '0' }}>\n                                        <strong>Date:</strong>{' '}\n                                        <span className=\"text-grey\" style={{ fontSize: '0.8em' }}>{moment(comment.createdAt).format('MMMM Do YYYY, h:mm a')}</span>\n                                    </p>\n                                </div>\n                                <p>{comment.content}</p>\n                                <div className=\"action-icons\" style={{ marginTop: '-1em' }}>\n                                    {(comment.user.id === loggedInUserId || loggedInUserId === 'admin') && ( // Check if the logged-in user is the author of the comment or is an admin\n                                        <i className=\"bi bi-trash-fill\" onClick={() => handleDeleteComment(comment._id)}></i> // Delete icon with onClick event\n                                    )}\n                                    <i className=\"bi bi-reply-fill\" onClick={() => setReplyingTo(comment._id)}></i> {/* Bootstrap reply icon */}\n                                </div>\n                                {replyingTo === comment._id && ( // Conditional rendering for reply text field\n                                    <div className=\"reply-text-field\">\n                                        <div className=\"input-group mb-3\">\n                                            <input id=\"replyInput\" type=\"text\" className=\"form-control\" placeholder=\"Write a reply...\" style={{ width: 'calc(100% - 42px)', marginBottom: '0.5em' }} />\n                                            <button className=\"btn btn-outline-dark me-2\" type=\"button\" style={{ backgroundColor: 'white', color: 'black', borderRadius: '35px', marginBottom: '0.5em' }} onClick={() => setReplyingTo(null)}>Cancel</button>\n                                            <button className=\"btn btn-outline-dark me-2\" type=\"button\" style={{ backgroundColor: 'black', color: 'white', borderRadius: '35px', marginBottom: '0.5em' }} onClick={() => handleReplySubmit(comment._id, document.getElementById('replyInput').value)}>Reply</button>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                            {comment.replies && <ul>{renderComments(comment.replies, renderedIds)}</ul>} {/* Render replies recursively */}\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-10 offset-md-1\">\n                    <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                        <h2>{blog.title}</h2>\n                        {loggedInUserId === blog.user.id && ( // Check if the logged-in user is the author of the blog\n                            <div className=\"action-icons\">\n                                <i className=\"bi bi-pencil-fill me-3\" onClick={() => handleEditBlog(blog._id)}></i> {/* Edit icon with onClick event */}\n                                <i className=\"bi bi-trash-fill\" onClick={() => handleDeleteBlog(blog._id)}></i> {/* Delete icon with onClick event */}\n                            </div>\n                        )}\n                    </div>\n                    <p className=\"small text-muted mb-2\">\n                        <strong>Author:</strong>{' '}\n                        <span className=\"text-grey\">{`${blog.user.firstName || 'Unknown'} ${blog.user.lastName || 'Unknown'}`}</span>\n                    </p>\n                    <p className=\"small text-muted mb-4\">\n                        <strong>Date:</strong>{' '}\n                        <span className=\"text-grey\">{moment(blog.createdAt).format('MMMM Do YYYY, h:mm a')}</span>\n                    </p>\n                    <img\n                        src={blog.blogImageUrl || 'https://via.placeholder.com/600x400'}\n                        alt={blog.title}\n                        className=\"img-fluid mb-4\"\n                    />\n                    <p style={{ whiteSpace: 'pre-wrap' }}>{blog.content}</p>\n                    <div className=\"comment-icon\" style={{ textAlign: 'left', marginTop: '1em' }} onClick={handleCommentIconClick}>\n                        <i className=\"bi bi-chat-square-dots\"></i> {/* Bootstrap comment icon */}\n                    </div>\n                    {commenting && ( // Conditional rendering for the comment text field\n                        <div className=\"comment-text-field\">\n                            <div className=\"input-group mb-3\">\n                                <input id=\"commentInput\" type=\"text\" className=\"form-control\" placeholder=\"Write a comment...\" style={{ width: 'calc(100% - 42px)', marginBottom: '0.5em' }} />\n                                <button className=\"btn btn-outline-dark me-2\" type=\"button\" style={{ backgroundColor: 'white', color: 'black', borderRadius: '35px', marginBottom: '0.5em' }} onClick={() => setCommenting(false)}>Cancel</button>\n                                <button className=\"btn btn-outline-dark me-2\" type=\"button\" style={{ backgroundColor: 'black', color: 'white', borderRadius: '35px', marginBottom: '0.5em' }} onClick={handleCommentSubmit}>Comment</button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-10 offset-md-1\">\n                    <h4 className=\"mt-5\">Comments:</h4>\n                    {renderComments(threadedComments)}\n                </div>\n            </div>\n        </div>\n    );\n\n\n};\n\nexport default SingleBlogPost;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}