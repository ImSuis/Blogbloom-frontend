{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { paginationBlogApi, searchBlogByTitleApi } from '../api/Api'; // Import the search API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1);\n  const [searchResults, setSearchResults] = useState([]); // State to store search results\n  const {\n    pageNumber\n  } = useParams();\n  useEffect(() => {\n    if (!searchResults.length) {\n      // If there are no search results, fetch paginated blogs\n      const fetchBlogs = async () => {\n        try {\n          const response = await paginationBlogApi(pageNumber || currentPage);\n          console.log('Response from paginationBlogApi:', response);\n          if (response && response.success && Array.isArray(response.blogs)) {\n            setBlogs(response.blogs);\n            setMaxPage(response.maxPage);\n          } else {\n            console.error('Invalid response data structure:', response);\n          }\n        } catch (error) {\n          console.error('Error fetching blogs:', error);\n        }\n      };\n      fetchBlogs();\n    }\n  }, [pageNumber, currentPage, searchResults]);\n  const handleSearch = async query => {\n    try {\n      const response = await searchBlogByTitleApi(query);\n      console.log('Response from searchBlogByTitleApi:', response);\n      if (response && response.success && Array.isArray(response.blogs)) {\n        setSearchResults(response.blogs);\n      } else {\n        console.error('Invalid response data structure:', response);\n      }\n    } catch (error) {\n      console.error('Error searching blogs by title:', error);\n    }\n  };\n\n  // Rest of the component code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title\",\n      onChange: e => handleSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), searchResults.length > 0 && searchResults.map(blog => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/blogs/${blog._id}`,\n      className: \"text-decoration-none text-dark\"\n    }, blog._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)), !searchResults.length && blogs.map(blog => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/blogs/${blog._id}`,\n      className: \"text-decoration-none text-dark\"\n    }, blog._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogPosts, \"lzE3P1CIyuq2EXxjVEN6qgcd3EM=\", false, function () {\n  return [useParams];\n});\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","paginationBlogApi","searchBlogByTitleApi","jsxDEV","_jsxDEV","BlogPosts","_s","blogs","setBlogs","currentPage","setCurrentPage","maxPage","setMaxPage","searchResults","setSearchResults","pageNumber","length","fetchBlogs","response","console","log","success","Array","isArray","error","handleSearch","query","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","map","blog","to","_id","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { paginationBlogApi, searchBlogByTitleApi } from '../api/Api'; // Import the search API\n\nconst BlogPosts = () => {\n    const [blogs, setBlogs] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [maxPage, setMaxPage] = useState(1);\n    const [searchResults, setSearchResults] = useState([]); // State to store search results\n    const { pageNumber } = useParams();\n\n    useEffect(() => {\n        if (!searchResults.length) { // If there are no search results, fetch paginated blogs\n            const fetchBlogs = async () => {\n                try {\n                    const response = await paginationBlogApi(pageNumber || currentPage);\n                    console.log('Response from paginationBlogApi:', response);\n\n                    if (response && response.success && Array.isArray(response.blogs)) {\n                        setBlogs(response.blogs);\n                        setMaxPage(response.maxPage);\n                    } else {\n                        console.error('Invalid response data structure:', response);\n                    }\n                } catch (error) {\n                    console.error('Error fetching blogs:', error);\n                }\n            };\n\n            fetchBlogs();\n        }\n    }, [pageNumber, currentPage, searchResults]);\n\n    const handleSearch = async (query) => {\n        try {\n            const response = await searchBlogByTitleApi(query);\n            console.log('Response from searchBlogByTitleApi:', response);\n\n            if (response && response.success && Array.isArray(response.blogs)) {\n                setSearchResults(response.blogs);\n            } else {\n                console.error('Invalid response data structure:', response);\n            }\n        } catch (error) {\n            console.error('Error searching blogs by title:', error);\n        }\n    };\n\n    // Rest of the component code...\n\n    return (\n        <div className=\"container mt-4\">\n            <h2 className=\"mb-4\">Blog Posts</h2>\n\n            {/* Search input field */}\n            <input type=\"text\" placeholder=\"Search by title\" onChange={(e) => handleSearch(e.target.value)} />\n\n            {/* Display search results if there are any */}\n            {searchResults.length > 0 && searchResults.map((blog) => (\n                <Link to={`/blogs/${blog._id}`} key={blog._id} className=\"text-decoration-none text-dark\">\n                    {/* Render each blog */}\n                </Link>\n            ))}\n\n            {/* Render paginated blogs if no search results */}\n            {!searchResults.length && blogs.map((blog) => (\n                <Link to={`/blogs/${blog._id}`} key={blog._id} className=\"text-decoration-none text-dark\">\n                    {/* Render each blog */}\n                </Link>\n            ))}\n\n            {/* Pagination controls */}\n            {/* Rest of the component code... */}\n        </div>\n    );\n};\n\nexport default BlogPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}