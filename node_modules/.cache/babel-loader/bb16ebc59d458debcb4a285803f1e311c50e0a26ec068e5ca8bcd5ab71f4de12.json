{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/pages/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserProfileApi } from '../api/Api'; // Import the getUserProfileApi function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // Define state variables to store user profile data\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch user profile data when the component mounts\n  useEffect(() => {\n    // Define an async function to fetch user profile data\n    const fetchUserProfile = async () => {\n      try {\n        // Fetch user profile data from the API\n        const response = await getUserProfileApi();\n        // Set the fetched user profile data to state\n        setUserProfile(response.data.user);\n        setLoading(false); // Update loading state\n      } catch (error) {\n        // Set error state if there's an error while fetching data\n        setError(error.message);\n        setLoading(false); // Update loading state\n      }\n    };\n\n    // Call the async function to fetch user profile data\n    fetchUserProfile();\n  }, []);\n\n  // Display loading message while fetching data\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Display error message if there's an error\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Render user profile data if available\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userProfile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"First Name: \", userProfile.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Name: \", userProfile.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userProfile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Is Admin: \", userProfile.isAdmin ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"gJYCIsctCupMeYhKL9fyaN+M2XA=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","getUserProfileApi","jsxDEV","_jsxDEV","Profile","_s","userProfile","setUserProfile","loading","setLoading","error","setError","fetchUserProfile","response","data","user","message","children","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","email","isAdmin","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/pages/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUserProfileApi } from '../api/Api'; // Import the getUserProfileApi function\n\nconst Profile = () => {\n    // Define state variables to store user profile data\n    const [userProfile, setUserProfile] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Fetch user profile data when the component mounts\n    useEffect(() => {\n        // Define an async function to fetch user profile data\n        const fetchUserProfile = async () => {\n            try {\n                // Fetch user profile data from the API\n                const response = await getUserProfileApi();\n                // Set the fetched user profile data to state\n                setUserProfile(response.data.user);\n                setLoading(false); // Update loading state\n            } catch (error) {\n                // Set error state if there's an error while fetching data\n                setError(error.message);\n                setLoading(false); // Update loading state\n            }\n        };\n\n        // Call the async function to fetch user profile data\n        fetchUserProfile();\n    }, []);\n\n    // Display loading message while fetching data\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    // Display error message if there's an error\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    // Render user profile data if available\n    return (\n        <div>\n            {userProfile && (\n                <div>\n                    <h2>User Profile</h2>\n                    <p>First Name: {userProfile.firstName}</p>\n                    <p>Last Name: {userProfile.lastName}</p>\n                    <p>Email: {userProfile.email}</p>\n                    <p>Is Admin: {userProfile.isAdmin ? 'Yes' : 'No'}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,iBAAiB,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMZ,iBAAiB,CAAC,CAAC;QAC1C;QACAM,cAAc,CAACM,QAAQ,CAACC,IAAI,CAACC,IAAI,CAAC;QAClCN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZ;QACAC,QAAQ,CAACD,KAAK,CAACM,OAAO,CAAC;QACvBP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC;;IAED;IACAG,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIJ,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;;EAEA;EACA,IAAIX,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAc,QAAA,GAAK,SAAO,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpC;;EAEA;EACA,oBACIlB,OAAA;IAAAc,QAAA,EACKX,WAAW,iBACRH,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBlB,OAAA;QAAAc,QAAA,GAAG,cAAY,EAACX,WAAW,CAACgB,SAAS;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1ClB,OAAA;QAAAc,QAAA,GAAG,aAAW,EAACX,WAAW,CAACiB,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxClB,OAAA;QAAAc,QAAA,GAAG,SAAO,EAACX,WAAW,CAACkB,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjClB,OAAA;QAAAc,QAAA,GAAG,YAAU,EAACX,WAAW,CAACmB,OAAO,GAAG,KAAK,GAAG,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CAnDID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}