{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\n// src/components/BlogPosts.js\nimport React, { useEffect, useState } from 'react';\nimport { getAllBlogsApi } from '../api/Api'; // Adjust the import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [users, setUsers] = useState({});\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n          fetchUsers(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const fetchUsers = async blogs => {\n    const userIds = blogs.map(blog => blog.user._id);\n    // Assuming you have an API to fetch user details by user id\n    // Replace 'getUserDetailsApi' with the actual API function\n    const response = await getUserDetailsApi(userIds);\n    const userMap = {};\n    response.data.forEach(user => {\n      userMap[user._id] = user; // Assuming '_id' is the user's unique identifier\n    });\n\n    setUsers(userMap);\n  };\n  const getBlogImage = blog => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), blogs.map(blog => {\n      var _users$blog$user$_id, _users$blog$user$_id2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media my-4 d-flex align-items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getBlogImage(blog),\n          className: \"mr-3\",\n          alt: blog.title,\n          style: {\n            width: '150px',\n            height: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-body flex-grow-1\",\n          style: {\n            marginLeft: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-0\",\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"small text-muted mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Author:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), ' ', `${((_users$blog$user$_id = users[blog.user._id]) === null || _users$blog$user$_id === void 0 ? void 0 : _users$blog$user$_id.firstName) || 'Unknown'} ${((_users$blog$user$_id2 = users[blog.user._id]) === null || _users$blog$user$_id2 === void 0 ? void 0 : _users$blog$user$_id2.lastName) || 'Unknown'}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, blog._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(BlogPosts, \"VCW3JLQgyhWiurQhlDGFdmNkVoA=\");\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["React","useEffect","useState","getAllBlogsApi","jsxDEV","_jsxDEV","BlogPosts","_s","blogs","setBlogs","users","setUsers","fetchBlogs","response","responseData","data","Array","isArray","fetchUsers","console","error","userIds","map","blog","user","_id","getUserDetailsApi","userMap","forEach","getBlogImage","imageUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","_users$blog$user$_id","_users$blog$user$_id2","className","src","alt","title","style","width","height","marginLeft","firstName","lastName","content","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["// src/components/BlogPosts.js\nimport React, { useEffect, useState } from 'react';\nimport { getAllBlogsApi } from '../api/Api'; // Adjust the import path\nconst BlogPosts = () => {\n    const [blogs, setBlogs] = useState([]);\n    const [users, setUsers] = useState({});\n  \n    useEffect(() => {\n      const fetchBlogs = async () => {\n        try {\n          const response = await getAllBlogsApi();\n          const responseData = response.data;\n  \n          if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n            setBlogs(responseData.blogs);\n            fetchUsers(responseData.blogs);\n          } else {\n            console.error('Invalid response data structure:', responseData);\n          }\n        } catch (error) {\n          console.error('Error fetching blogs:', error);\n        }\n      };\n  \n      fetchBlogs();\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n  \n    const fetchUsers = async (blogs) => {\n      const userIds = blogs.map((blog) => blog.user._id);\n      // Assuming you have an API to fetch user details by user id\n      // Replace 'getUserDetailsApi' with the actual API function\n      const response = await getUserDetailsApi(userIds);\n      const userMap = {};\n      response.data.forEach((user) => {\n        userMap[user._id] = user; // Assuming '_id' is the user's unique identifier\n      });\n      setUsers(userMap);\n    };\n  \n    const getBlogImage = (blog) => {\n      return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n    };\n  \n    return (\n      <div>\n        <h2>Blog Posts</h2>\n        {blogs.map((blog) => (\n          <div key={blog._id} className=\"media my-4 d-flex align-items-start\">\n            <img\n              src={getBlogImage(blog)}\n              className=\"mr-3\"\n              alt={blog.title}\n              style={{ width: '150px', height: '150px' }}\n            />\n            <div className=\"media-body flex-grow-1\" style={{ marginLeft: '1rem' }}>\n              <h5 className=\"mt-0\">{blog.title}</h5>\n              <p className=\"small text-muted mb-0\">\n                <strong>Author:</strong>{' '}\n                {`${users[blog.user._id]?.firstName || 'Unknown'} ${users[blog.user._id]?.lastName || 'Unknown'}`}\n              </p>\n              <p>{blog.content}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n  export default BlogPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}