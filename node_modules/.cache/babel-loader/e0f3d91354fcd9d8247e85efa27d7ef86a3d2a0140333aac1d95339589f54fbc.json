{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\n// src/components/BlogPosts.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllBlogsApi } from '../path-to-your-api-file/api'; // Adjust the import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [users, setUsers] = useState({});\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n          fetchUsers(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const fetchUsers = async blogs => {\n    const userIds = blogs.map(blog => blog.userId);\n    // Assuming you have an API to fetch user details by user id\n    // Replace 'getUserDetailsApi' with the actual API function\n    const response = await getUserDetailsApi(userIds);\n    const userMap = {};\n    response.data.forEach(user => {\n      userMap[user.id] = user; // Assuming 'id' is the user's unique identifier\n    });\n\n    setUsers(userMap);\n  };\n  const getBlogImage = blog => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), blogs.map(blog => {\n      var _users$blog$userId, _users$blog$userId2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media my-4 d-flex align-items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getBlogImage(blog),\n          className: \"mr-3\",\n          alt: blog.title,\n          style: {\n            width: '150px',\n            height: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-body flex-grow-1\",\n          style: {\n            marginLeft: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-0\",\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"small text-muted mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Author:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), \" \", `${((_users$blog$userId = users[blog.userId]) === null || _users$blog$userId === void 0 ? void 0 : _users$blog$userId.firstName) || 'Unknown'} ${((_users$blog$userId2 = users[blog.userId]) === null || _users$blog$userId2 === void 0 ? void 0 : _users$blog$userId2.lastName) || 'Unknown'}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, blog.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPosts, \"VCW3JLQgyhWiurQhlDGFdmNkVoA=\");\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["React","useState","useEffect","getAllBlogsApi","jsxDEV","_jsxDEV","BlogPosts","_s","blogs","setBlogs","users","setUsers","fetchBlogs","response","responseData","data","Array","isArray","fetchUsers","console","error","userIds","map","blog","userId","getUserDetailsApi","userMap","forEach","user","id","getBlogImage","imageUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","_users$blog$userId","_users$blog$userId2","className","src","alt","title","style","width","height","marginLeft","firstName","lastName","content","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["// src/components/BlogPosts.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllBlogsApi } from '../path-to-your-api-file/api'; // Adjust the import path\n\nconst BlogPosts = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [users, setUsers] = useState({});\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n          fetchUsers(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const fetchUsers = async (blogs) => {\n    const userIds = blogs.map((blog) => blog.userId);\n    // Assuming you have an API to fetch user details by user id\n    // Replace 'getUserDetailsApi' with the actual API function\n    const response = await getUserDetailsApi(userIds);\n    const userMap = {};\n    response.data.forEach((user) => {\n      userMap[user.id] = user; // Assuming 'id' is the user's unique identifier\n    });\n    setUsers(userMap);\n  };\n\n  const getBlogImage = (blog) => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return (\n    <div>\n      <h2>Blog Posts</h2>\n      {blogs.map((blog) => (\n        <div key={blog.id} className=\"media my-4 d-flex align-items-start\">\n          <img\n            src={getBlogImage(blog)}\n            className=\"mr-3\"\n            alt={blog.title}\n            style={{ width: '150px', height: '150px' }}\n          />\n          <div className=\"media-body flex-grow-1\" style={{ marginLeft: '1rem' }}>\n            <h5 className=\"mt-0\">{blog.title}</h5>\n            <p className=\"small text-muted mb-0\">\n              <strong>Author:</strong> {`${users[blog.userId]?.firstName || 'Unknown'} ${users[blog.userId]?.lastName || 'Unknown'}`}\n            </p>\n            <p>{blog.content}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BlogPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}