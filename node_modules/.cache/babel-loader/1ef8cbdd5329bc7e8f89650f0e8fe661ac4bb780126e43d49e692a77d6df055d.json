{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [users, setUsers] = useState({});\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n          fetchUsers(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const fetchUsers = async blogs => {\n    const userIds = blogs.map(blog => blog.user._id);\n    // Assuming you have an API to fetch user details by user id\n    // Replace 'getUserDetailsApi' with the actual API function\n    const response = await getUserDetailsApi(userIds);\n    const userMap = {};\n    response.data.forEach(user => {\n      userMap[user._id] = user; // Assuming '_id' is the user's unique identifier\n    });\n\n    setUsers(userMap);\n  };\n  const getBlogImage = blog => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), blogs.map(blog => {\n      var _users$blog$user$_id, _users$blog$user$_id2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media my-4 d-flex align-items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getBlogImage(blog),\n          className: \"mr-3\",\n          alt: blog.title,\n          style: {\n            width: '150px',\n            height: '150px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-body flex-grow-1\",\n          style: {\n            marginLeft: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mt-0\",\n            children: blog.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"small text-muted mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Author:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), ' ', `${((_users$blog$user$_id = users[blog.user._id]) === null || _users$blog$user$_id === void 0 ? void 0 : _users$blog$user$_id.firstName) || 'Unknown'} ${((_users$blog$user$_id2 = users[blog.user._id]) === null || _users$blog$user$_id2 === void 0 ? void 0 : _users$blog$user$_id2.lastName) || 'Unknown'}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: blog.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, blog._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogPosts, \"VCW3JLQgyhWiurQhlDGFdmNkVoA=\");\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["BlogPosts","_s","blogs","setBlogs","useState","users","setUsers","useEffect","fetchBlogs","response","getAllBlogsApi","responseData","data","Array","isArray","fetchUsers","console","error","userIds","map","blog","user","_id","getUserDetailsApi","userMap","forEach","getBlogImage","imageUrl","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_users$blog$user$_id","_users$blog$user$_id2","className","src","alt","title","style","width","height","marginLeft","firstName","lastName","content","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["const BlogPosts = () => {\n    const [blogs, setBlogs] = useState([]);\n    const [users, setUsers] = useState({});\n\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await getAllBlogsApi();\n                const responseData = response.data;\n\n                if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n                    setBlogs(responseData.blogs);\n                    fetchUsers(responseData.blogs);\n                } else {\n                    console.error('Invalid response data structure:', responseData);\n                }\n            } catch (error) {\n                console.error('Error fetching blogs:', error);\n            }\n        };\n\n        fetchBlogs();\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n\n    const fetchUsers = async (blogs) => {\n        const userIds = blogs.map((blog) => blog.user._id);\n        // Assuming you have an API to fetch user details by user id\n        // Replace 'getUserDetailsApi' with the actual API function\n        const response = await getUserDetailsApi(userIds);\n        const userMap = {};\n        response.data.forEach((user) => {\n            userMap[user._id] = user; // Assuming '_id' is the user's unique identifier\n        });\n        setUsers(userMap);\n    };\n\n    const getBlogImage = (blog) => {\n        return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n    };\n\n    return (\n        <div>\n            <h2>Blog Posts</h2>\n            {blogs.map((blog) => (\n                <div key={blog._id} className=\"media my-4 d-flex align-items-start\">\n                    <img\n                        src={getBlogImage(blog)}\n                        className=\"mr-3\"\n                        alt={blog.title}\n                        style={{ width: '150px', height: '150px' }}\n                    />\n                    <div className=\"media-body flex-grow-1\" style={{ marginLeft: '1rem' }}>\n                        <h5 className=\"mt-0\">{blog.title}</h5>\n                        <p className=\"small text-muted mb-0\">\n                            <strong>Author:</strong>{' '}\n                            {`${users[blog.user._id]?.firstName || 'Unknown'} ${users[blog.user._id]?.lastName || 'Unknown'}`}\n                        </p>\n                        <p>{blog.content}</p>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default BlogPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}