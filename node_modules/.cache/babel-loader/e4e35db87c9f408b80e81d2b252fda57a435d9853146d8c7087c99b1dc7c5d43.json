{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { verifyCodeAndChangePasswordApi } from './Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const handleResetPassword = async () => {\n    setIsLoading(true);\n    try {\n      const response = await verifyCodeAndChangePasswordApi(email, code, newPassword);\n      console.log(response.message);\n      setMessage(response.message);\n      // Optionally, you can redirect the user to another page or display a success message\n    } catch (error) {\n      console.error(\"Error resetting password:\", error.message);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter verification code\",\n      value: code,\n      onChange: e => setCode(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter new password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetPassword,\n      disabled: isLoading,\n      children: isLoading ? 'Resetting Password...' : 'Reset Password'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"lkbOEhGeLGBhAQMCJ/aUfi3McdM=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","verifyCodeAndChangePasswordApi","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","code","setCode","newPassword","setNewPassword","isLoading","setIsLoading","message","setMessage","error","setError","handleResetPassword","response","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { verifyCodeAndChangePasswordApi } from './Api.js';\n\nconst ResetPassword = () => {\n    const [email, setEmail] = useState('');\n    const [code, setCode] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    const handleResetPassword = async () => {\n        setIsLoading(true);\n        try {\n            const response = await verifyCodeAndChangePasswordApi(email, code, newPassword);\n            console.log(response.message);\n            setMessage(response.message);\n            // Optionally, you can redirect the user to another page or display a success message\n        } catch (error) {\n            console.error(\"Error resetting password:\", error.message);\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Reset Password</h2>\n            <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <input\n                type=\"text\"\n                placeholder=\"Enter verification code\"\n                value={code}\n                onChange={(e) => setCode(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Enter new password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n            />\n            <button onClick={handleResetPassword} disabled={isLoading}>\n                {isLoading ? 'Resetting Password...' : 'Reset Password'}\n            </button>\n            {message && <p>{message}</p>}\n            {error && <p>{error}</p>}\n        </div>\n    );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}