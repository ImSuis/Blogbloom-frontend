{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/UserTable.jsx\";\n// UserTable.js\nimport React from 'react';\nimport { updateUserRoleApi } from '../api'; // Import API function for updating user role\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = ({\n  users,\n  isAdmin\n}) => {\n  const handleRoleChange = userId => {\n    // Implement logic to change user role\n    updateUserRoleApi(userId).then(response => {\n      // Handle success response\n      console.log('User role updated successfully:', response.data);\n      // You may want to update the user list after changing the role\n      // You can do this by calling a function passed from the parent component\n    }).catch(error => {\n      // Handle error response\n      console.error('Error updating user role:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.isAdmin ? 'Yes' : 'No'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), isAdmin &&\n        /*#__PURE__*/\n        // Show button only if user is admin\n        _jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRoleChange(user._id),\n            children: \"Change Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","updateUserRoleApi","jsxDEV","_jsxDEV","UserTable","users","isAdmin","handleRoleChange","userId","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","firstName","lastName","email","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/UserTable.jsx"],"sourcesContent":["// UserTable.js\nimport React from 'react';\nimport { updateUserRoleApi } from '../api'; // Import API function for updating user role\n\nconst UserTable = ({ users, isAdmin }) => {\n  const handleRoleChange = (userId) => {\n    // Implement logic to change user role\n    updateUserRoleApi(userId)\n      .then(response => {\n        // Handle success response\n        console.log('User role updated successfully:', response.data);\n        // You may want to update the user list after changing the role\n        // You can do this by calling a function passed from the parent component\n      })\n      .catch(error => {\n        // Handle error response\n        console.error('Error updating user role:', error);\n      });\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Admin</th>\n          {isAdmin && <th>Action</th>} {/* Only show Action column if user is admin */}\n        </tr>\n      </thead>\n      <tbody>\n        {users.map(user => (\n          <tr key={user._id}>\n            <td>{user.firstName}</td>\n            <td>{user.lastName}</td>\n            <td>{user.email}</td>\n            <td>{user.isAdmin ? 'Yes' : 'No'}</td>\n            {isAdmin && ( // Show button only if user is admin\n              <td>\n                <button onClick={() => handleRoleChange(user._id)}>\n                  Change Role\n                </button>\n              </td>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default UserTable;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EACxC,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;IACnC;IACAP,iBAAiB,CAACO,MAAM,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC7D;MACA;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBjB,OAAA;UAAAa,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBjB,OAAA;UAAAa,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACdjB,OAAA;UAAAa,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACbd,OAAO,iBAAIH,OAAA;UAAAa,QAAA,EAAI;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAAC,GAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRjB,OAAA;MAAAa,QAAA,EACGX,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACbnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAKM,IAAI,CAACC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBjB,OAAA;UAAAa,QAAA,EAAKM,IAAI,CAACE;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBjB,OAAA;UAAAa,QAAA,EAAKM,IAAI,CAACG;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBjB,OAAA;UAAAa,QAAA,EAAKM,IAAI,CAAChB,OAAO,GAAG,KAAK,GAAG;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrCd,OAAO;QAAA;QAAM;QACZH,OAAA;UAAAa,QAAA,eACEb,OAAA;YAAQuB,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACe,IAAI,CAACK,GAAG,CAAE;YAAAX,QAAA,EAAC;UAEnD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CACL;MAAA,GAXME,IAAI,CAACK,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACQ,EAAA,GA9CIxB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}