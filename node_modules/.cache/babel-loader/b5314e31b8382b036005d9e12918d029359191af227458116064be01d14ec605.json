{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const getBlogImage = blog => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media my-4 d-flex align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getBlogImage(blog),\n        className: \"mr-3\",\n        alt: blog.title,\n        style: {\n          width: '150px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-body flex-grow-1\",\n        style: {\n          marginLeft: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-0\",\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small text-muted mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), \" \", `${blog.firstName} ${blog.lastName}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(BlogPosts, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["BlogPosts","_s","blogs","setBlogs","useState","useEffect","fetchBlogs","response","getAllBlogsApi","responseData","data","Array","isArray","console","error","getBlogImage","blog","imageUrl","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","src","alt","title","style","width","height","marginLeft","firstName","lastName","content","id","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["const BlogPosts = () => {\n    const [blogs, setBlogs] = useState([]);\n  \n    useEffect(() => {\n      const fetchBlogs = async () => {\n        try {\n          const response = await getAllBlogsApi();\n          const responseData = response.data;\n  \n          if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n            setBlogs(responseData.blogs);\n          } else {\n            console.error('Invalid response data structure:', responseData);\n          }\n        } catch (error) {\n          console.error('Error fetching blogs:', error);\n        }\n      };\n  \n      fetchBlogs();\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n  \n    const getBlogImage = (blog) => {\n      return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n    };\n  \n    return (\n      <div>\n        <h2>Blog Posts</h2>\n        {blogs.map((blog) => (\n          <div key={blog.id} className=\"media my-4 d-flex align-items-start\">\n            <img\n              src={getBlogImage(blog)}\n              className=\"mr-3\"\n              alt={blog.title}\n              style={{ width: '150px', height: '150px' }}\n            />\n            <div className=\"media-body flex-grow-1\" style={{ marginLeft: '1rem' }}>\n              <h5 className=\"mt-0\">{blog.title}</h5>\n              <p className=\"small text-muted mb-0\">\n                <strong>Author:</strong> {`${blog.firstName} ${blog.lastName}`}\n              </p>\n              <p>{blog.content}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n  export default BlogPosts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}