{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\n// src/components/BlogPosts.js\nimport React, { useEffect, useState } from 'react';\nimport { getAllBlogsApi } from '../path-to-your-api-file/api'; // Adjust the import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n\n        // Check if responseData is an array\n        if (Array.isArray(responseData)) {\n          setBlogs(responseData);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media my-4 d-flex align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: blog.imageUrl,\n        className: \"mr-3\",\n        alt: blog.title,\n        style: {\n          width: '150px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-body flex-grow-1\",\n        style: {\n          marginLeft: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-0\",\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small text-muted mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), \" \", blog.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, blog.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogPosts, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["React","useEffect","useState","getAllBlogsApi","jsxDEV","_jsxDEV","BlogPosts","_s","blogs","setBlogs","fetchBlogs","response","responseData","data","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","blog","className","src","imageUrl","alt","title","style","width","height","marginLeft","author","content","id","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["// src/components/BlogPosts.js\nimport React, { useEffect, useState } from 'react';\nimport { getAllBlogsApi } from '../path-to-your-api-file/api'; // Adjust the import path\n\nconst BlogPosts = () => {\n    const [blogs, setBlogs] = useState([]);\n\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await getAllBlogsApi();\n                const responseData = response.data;\n\n                // Check if responseData is an array\n                if (Array.isArray(responseData)) {\n                    setBlogs(responseData);\n                } else {\n                    console.error('Invalid response data structure:', responseData);\n                }\n            } catch (error) {\n                console.error('Error fetching blogs:', error);\n            }\n        };\n\n        fetchBlogs();\n    }, []); // Empty dependency array ensures the effect runs only once on mount\n\n    return (\n        <div>\n            <h2>Blog Posts</h2>\n            {blogs.map((blog) => (\n                <div key={blog.id} className=\"media my-4 d-flex align-items-start\">\n                    <img\n                        src={blog.imageUrl}\n                        className=\"mr-3\"\n                        alt={blog.title}\n                        style={{ width: '150px', height: '150px' }}\n                    />\n                    <div className=\"media-body flex-grow-1\" style={{ marginLeft: '1rem' }}>\n                        <h5 className=\"mt-0\">{blog.title}</h5>\n                        <p className=\"small text-muted mb-0\">\n                            <strong>Author:</strong> {blog.author}\n                        </p>\n                        <p>{blog.content}</p>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default BlogPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}