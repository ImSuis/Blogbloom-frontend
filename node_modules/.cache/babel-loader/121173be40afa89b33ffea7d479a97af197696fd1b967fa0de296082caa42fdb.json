{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\n// src/components/BlogPosts.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllBlogsApi } from '../api/Api'; // Adjust the import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const getBlogImage = blog => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media my-4 d-flex align-items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getBlogImage(blog),\n        className: \"mr-3\",\n        alt: blog.title,\n        style: {\n          width: '150px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-body flex-grow-1\",\n        style: {\n          marginLeft: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-0\",\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"small text-muted mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), ' ', `${blog.user.firstName || 'Unknown'} ${blog.user.lastName || 'Unknown'}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, blog._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPosts, \"RDzdeLKEs49XKHWpCIuOQAADm3U=\");\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["React","useState","useEffect","getAllBlogsApi","jsxDEV","_jsxDEV","BlogPosts","_s","blogs","setBlogs","fetchBlogs","response","responseData","data","Array","isArray","console","error","getBlogImage","blog","imageUrl","children","fileName","_jsxFileName","lineNumber","columnNumber","map","className","src","alt","title","style","width","height","marginLeft","user","firstName","lastName","content","_id","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["// src/components/BlogPosts.js\nimport React, { useState, useEffect } from 'react';\nimport { getAllBlogsApi } from '../api/Api'; // Adjust the import path\n\nconst BlogPosts = () => {\n  const [blogs, setBlogs] = useState([]);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await getAllBlogsApi();\n        const responseData = response.data;\n\n        if (responseData && responseData.blogs && Array.isArray(responseData.blogs)) {\n          setBlogs(responseData.blogs);\n        } else {\n          console.error('Invalid response data structure:', responseData);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n\n    fetchBlogs();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  const getBlogImage = (blog) => {\n    return blog.imageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  return (\n    <div>\n      <h2>Blog Posts</h2>\n      {blogs.map((blog) => (\n        <div key={blog._id} className=\"media my-4 d-flex align-items-start\">\n          <img\n            src={getBlogImage(blog)}\n            className=\"mr-3\"\n            alt={blog.title}\n            style={{ width: '150px', height: '150px' }}\n          />\n          <div className=\"media-body flex-grow-1\" style={{ marginLeft: '1rem' }}>\n            <h5 className=\"mt-0\">{blog.title}</h5>\n            <p className=\"small text-muted mb-0\">\n              <strong>Author:</strong>{' '}\n              {`${blog.user.firstName || 'Unknown'} ${blog.user.lastName || 'Unknown'}`}\n            </p>\n            <p>{blog.content}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BlogPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}