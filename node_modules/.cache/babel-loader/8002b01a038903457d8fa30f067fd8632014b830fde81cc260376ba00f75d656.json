{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { changePasswordApi } from \"../api/Api\";\nconst ChangePassword = () => {\n  _s();\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Call the changePasswordApi function with old and new passwords\n      await changePasswordApi(oldPassword, newPassword);\n      // Clear form fields and reset error state on successful password change\n      setOldPassword(\"\");\n      setNewPassword(\"\");\n      setError(null);\n    } catch (error) {\n      // Handle error if password change fails\n      setError(error.response.data.message);\n    }\n  };\n\n  // return (\n  //     <form onSubmit={handleSubmit}>\n  //         <div>\n  //             <label htmlFor=\"oldPassword\">Old Password:</label>\n  //             <input\n  //                 type=\"password\"\n  //                 id=\"oldPassword\"\n  //                 value={oldPassword}\n  //                 onChange={(e) => setOldPassword(e.target.value)}\n  //             />\n  //         </div>\n  //         <div>\n  //             <label htmlFor=\"newPassword\">New Password:</label>\n  //             <input\n  //                 type=\"password\"\n  //                 id=\"newPassword\"\n  //                 value={newPassword}\n  //                 onChange={(e) => setNewPassword(e.target.value)}\n  //             />\n  //         </div>\n  //         {error && <div style={{ color: \"red\" }}>{error}</div>}\n  //         <button type=\"submit\">Change Password</button>\n  //     </form>\n  // );\n};\n_s(ChangePassword, \"wNNcYUphat0iBIy7NIxpFumDC+A=\");\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","changePasswordApi","ChangePassword","_s","oldPassword","setOldPassword","newPassword","setNewPassword","error","setError","handleSubmit","e","preventDefault","response","data","message","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/ChangePassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { changePasswordApi } from \"../api/Api\";\n\nconst ChangePassword = () => {\n    const [oldPassword, setOldPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [error, setError] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // Call the changePasswordApi function with old and new passwords\n            await changePasswordApi(oldPassword, newPassword);\n            // Clear form fields and reset error state on successful password change\n            setOldPassword(\"\");\n            setNewPassword(\"\");\n            setError(null);\n        } catch (error) {\n            // Handle error if password change fails\n            setError(error.response.data.message);\n        }\n    };\n\n    // return (\n    //     <form onSubmit={handleSubmit}>\n    //         <div>\n    //             <label htmlFor=\"oldPassword\">Old Password:</label>\n    //             <input\n    //                 type=\"password\"\n    //                 id=\"oldPassword\"\n    //                 value={oldPassword}\n    //                 onChange={(e) => setOldPassword(e.target.value)}\n    //             />\n    //         </div>\n    //         <div>\n    //             <label htmlFor=\"newPassword\">New Password:</label>\n    //             <input\n    //                 type=\"password\"\n    //                 id=\"newPassword\"\n    //                 value={newPassword}\n    //                 onChange={(e) => setNewPassword(e.target.value)}\n    //             />\n    //         </div>\n    //         {error && <div style={{ color: \"red\" }}>{error}</div>}\n    //         <button type=\"submit\">Change Password</button>\n    //     </form>\n    // );\n};\n\nexport default ChangePassword;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,YAAY;AAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA;MACA,MAAMX,iBAAiB,CAACG,WAAW,EAAEE,WAAW,CAAC;MACjD;MACAD,cAAc,CAAC,EAAE,CAAC;MAClBE,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZ;MACAC,QAAQ,CAACD,KAAK,CAACK,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACzC;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAACZ,EAAA,CA5CID,cAAc;AAAAc,EAAA,GAAdd,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}