{"ast":null,"code":"var _jsxFileName = \"/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { paginationBlogApi } from '../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPosts = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1); // Track the maximum page\n  const {\n    pageNumber\n  } = useParams(); // Get the pageNumber from URL params\n  const [searchQuery, setSearchQuery] = useState(''); // State to store search query\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await paginationBlogApi(pageNumber || currentPage);\n        console.log('Response from paginationBlogApi:', response);\n        if (response && response.success && Array.isArray(response.blogs)) {\n          setBlogs(response.blogs);\n          setMaxPage(response.maxPage); // Update the maximum page\n        } else {\n          console.error('Invalid response data structure:', response);\n        }\n      } catch (error) {\n        console.error('Error fetching blogs:', error);\n      }\n    };\n    fetchBlogs();\n  }, [pageNumber, currentPage]);\n  useEffect(() => {\n    // Reset current page to 1 when search query changes\n    setCurrentPage(1);\n  }, [searchQuery]);\n  const getBlogImage = blog => {\n    return blog.blogImageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n  };\n\n  const truncateContent = (content, maxLength) => {\n    if (content.length <= maxLength) {\n      return content;\n    }\n    return content.substring(0, maxLength) + '...';\n  };\n\n  // Filter blogs based on search query\n  const filteredBlogs = blogs.filter(blog => {\n    return blog.title.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n  // Determine the range of indices to display based on pagination\n  const startIndex = (currentPage - 1) * 10;\n  const endIndex = startIndex + 10;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), filteredBlogs.slice(startIndex, endIndex).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No blogs found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 72\n    }, this), filteredBlogs.slice(startIndex, endIndex).map(blog => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/blogs/${blog._id}`,\n        className: \"text-decoration-none text-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media my-4 d-flex align-items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getBlogImage(blog),\n            className: \"mr-3\",\n            alt: blog.title,\n            style: {\n              width: '150px',\n              height: '150px',\n              marginRight: '20px'\n            } // Add margin-right to the image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-0\",\n              children: blog.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"small text-muted\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Author:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), ' ', blog.user ? `${blog.user.firstName || 'Unknown'} ${blog.user.lastName || 'Unknown'}` : 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: truncateContent(blog.content, 300)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)\n      }, blog._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), Array.from({\n        length: maxPage\n      }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => setCurrentPage(page),\n        disabled: currentPage === page,\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => setCurrentPage(currentPage + 1),\n        disabled: currentPage === maxPage || filteredBlogs.length === 0 // Disable if on max page or no blogs\n        ,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogPosts, \"BVJN7SYR5BJgqBR8+VxfNmDAh78=\", false, function () {\n  return [useParams];\n});\n_c = BlogPosts;\nexport default BlogPosts;\nvar _c;\n$RefreshReg$(_c, \"BlogPosts\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","paginationBlogApi","jsxDEV","_jsxDEV","BlogPosts","_s","blogs","setBlogs","currentPage","setCurrentPage","maxPage","setMaxPage","pageNumber","searchQuery","setSearchQuery","fetchBlogs","response","console","log","success","Array","isArray","error","getBlogImage","blog","blogImageUrl","truncateContent","content","maxLength","length","substring","filteredBlogs","filter","title","toLowerCase","includes","startIndex","endIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","slice","map","to","_id","src","alt","style","width","height","marginRight","user","firstName","lastName","onClick","disabled","from","_","i","page","_c","$RefreshReg$"],"sources":["/Users/suyash/frontend-31a-ImSuis/src/components/BlogPost.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { paginationBlogApi } from '../api/Api';\n\nconst BlogPosts = () => {\n    const [blogs, setBlogs] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [maxPage, setMaxPage] = useState(1); // Track the maximum page\n    const { pageNumber } = useParams(); // Get the pageNumber from URL params\n    const [searchQuery, setSearchQuery] = useState(''); // State to store search query\n\n    useEffect(() => {\n        const fetchBlogs = async () => {\n            try {\n                const response = await paginationBlogApi(pageNumber || currentPage);\n                console.log('Response from paginationBlogApi:', response);\n\n                if (response && response.success && Array.isArray(response.blogs)) {\n                    setBlogs(response.blogs);\n                    setMaxPage(response.maxPage); // Update the maximum page\n                } else {\n                    console.error('Invalid response data structure:', response);\n                }\n            } catch (error) {\n                console.error('Error fetching blogs:', error);\n            }\n        };\n\n        fetchBlogs();\n    }, [pageNumber, currentPage]);\n\n    useEffect(() => {\n        // Reset current page to 1 when search query changes\n        setCurrentPage(1);\n    }, [searchQuery]);\n\n    const getBlogImage = (blog) => {\n        return blog.blogImageUrl || 'https://via.placeholder.com/150'; // Use placeholder image if no imageUrl is provided\n    };\n\n    const truncateContent = (content, maxLength) => {\n        if (content.length <= maxLength) {\n            return content;\n        }\n        return content.substring(0, maxLength) + '...';\n    };\n\n    // Filter blogs based on search query\n    const filteredBlogs = blogs.filter(blog => {\n        return blog.title.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n\n    // Determine the range of indices to display based on pagination\n    const startIndex = (currentPage - 1) * 10;\n    const endIndex = startIndex + 10;\n\n    return (\n        <div className=\"container mt-4\">\n            <h2 className=\"mb-4\">Blog Posts</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Search by title\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n            />\n            {filteredBlogs.slice(startIndex, endIndex).length === 0 && <p>No blogs found.</p>}\n            {filteredBlogs.slice(startIndex, endIndex).map((blog) => {\n                return (\n                    <Link to={`/blogs/${blog._id}`} key={blog._id} className=\"text-decoration-none text-dark\">\n                        <div className=\"media my-4 d-flex align-items-start\">\n                            <img\n                                src={getBlogImage(blog)}\n                                className=\"mr-3\"\n                                alt={blog.title}\n                                style={{ width: '150px', height: '150px', marginRight: '20px' }} // Add margin-right to the image\n                            />\n                            <div className=\"media-body\">\n                                <h5 className=\"mt-0\">{blog.title}</h5>\n                                <p className=\"small text-muted\">\n                                    <strong>Author:</strong>{' '}\n                                    {blog.user ? `${blog.user.firstName || 'Unknown'} ${blog.user.lastName || 'Unknown'}` : 'Unknown'}\n                                </p>\n                                <p>{truncateContent(blog.content, 300)}</p>\n                            </div>\n                        </div>\n                    </Link>\n                );\n            })}\n            <div className=\"d-flex justify-content-between align-items-center\">\n                <button\n                    className=\"btn btn-dark\"\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                    disabled={currentPage === 1}\n                >\n                    Previous\n                </button>\n                <span>Page {currentPage}</span>\n                {Array.from({ length: maxPage }, (_, i) => i + 1).map((page) => (\n                    <button\n                        key={page}\n                        className=\"btn btn-dark\"\n                        onClick={() => setCurrentPage(page)}\n                        disabled={currentPage === page}\n                    >\n                        {page}\n                    </button>\n                ))}\n                <button\n                    className=\"btn btn-dark\"\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                    disabled={currentPage === maxPage || filteredBlogs.length === 0} // Disable if on max page or no blogs\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default BlogPosts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}